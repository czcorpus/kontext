services:
  kontext-dev:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.kontext-dev
    environment:
      - TZ=Europe/Prague
      - DEV_SERVER_HOST=0.0.0.0
      - DEV_PUBLIC_PATH=
    command: bash -c "./scripts/install/conf/docker/run.dev.sh"
    ports:
      # kontext debug port
      - "5678:5678"
      # sanic inspector
      - "6457:6457"
      # webpack dev server port
      - "9000:9000"
    volumes:
      - ${KONTEXT_CONFIG}:/opt/kontext/conf/config.xml
      # we have to bind folders separatelly
      # if we bind whole root, container can't access its node_modules
      - ./lib:/opt/kontext/lib
      - ./locale:/opt/kontext/locale
      - ./scripts:/opt/kontext/scripts
      - ./templates:/opt/kontext/templates
      - ./worker:/opt/kontext/worker
      # similar reason for binding folders
      # we need to share dist files with nginx
      - dist:/opt/kontext/public/files/dist
      - ./public/app.py:/opt/kontext/public/app.py
      - ./public/files/css:/opt/kontext/public/files/css
      - ./public/files/html:/opt/kontext/public/files/html
      - ./public/files/img:/opt/kontext/public/files/img
      - ./public/files/js:/opt/kontext/public/files/js
      - ./public/files/misc:/opt/kontext/public/files/misc
      - ./public/files/themes:/opt/kontext/public/files/themes
      - corpora-data:/var/lib/manatee
      - corpora-cache:/var/local/corpora
      - ./webpack.dev.js:/opt/kontext/webpack.dev.js
    networks:
      - databases
      - kontext
    depends_on:
      redis:
        condition: service_healthy

  rq-worker:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.rqworker
    environment:
      - TZ=Europe/Prague
    command: bash -c "pip3 install debugpy pyinotify pyasyncore --break-system-packages && python3 scripts/dev/reloader.py /opt/kontext py \"python3 -m debugpy --listen 0.0.0.0:5679 /opt/kontext/worker/rqworker.py\""
    ports:
      # rqworker debug port
      - 5679-5689:5679
    volumes:
      - ${KONTEXT_CONFIG}:/opt/kontext/conf/config.xml
      - ./lib:/opt/kontext/lib
      - ./worker:/opt/kontext/worker
      - ./scripts:/opt/kontext/scripts
      - corpora-data:/var/lib/manatee
      - corpora-cache:/var/local/corpora
    networks:
      - databases
    depends_on:
      redis:
        condition: service_healthy
      kontext-dev:
        condition: service_started

  rq-scheduler:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.rqscheduler
    environment:
      - TZ=Europe/Prague
    command: rqscheduler --host kontext-redis-1 --db 2 -i 10
    networks:
      - databases
    depends_on:
      redis:
        condition: service_healthy
      kontext-dev:
        condition: service_started

  redis:
    image: redis:alpine
    environment:
      - TZ=Europe/Prague
    networks:
      - databases
    ports:
      - "16379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:stable-alpine
    environment:
      - TZ=Europe/Prague
    ports:
      - "8080:80"
    volumes:
      - ./scripts/install/conf/docker/nginx.dev.conf:/etc/nginx/conf.d/default.conf
      - dist:/opt/kontext/public/files/dist
      - ./public/files/html:/opt/kontext/public/files/html
      - ./public/files/img:/opt/kontext/public/files/img
      - ./public/files/js:/opt/kontext/public/files/js
      - ./public/files/misc:/opt/kontext/public/files/misc
      - ./public/files/themes:/opt/kontext/public/files/themes
    networks:
      - kontext
    depends_on:
      kontext-dev:
        condition: service_started

volumes:
  dist: {}
  corpora-data: {}
  corpora-cache: {}
  redisdata: {}


networks:
  databases: {}
  kontext: {}