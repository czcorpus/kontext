#*
Copyright (c) 2003-2009  Pavel Rychly

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; version 2
dated June, 1991.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*#
#def $print_xml_parline($line, $corpname)
#filter WebSafe
<parline corpus="$corpname.n">
    <ref>$line.ref</ref>#slurp
    <left_context>#slurp
        #for $ll in $line.Left
        #unless $ll.class == 'strc'
        $ll.str #slurp
        #end unless
        #end for
    </left_context><kwic>#slurp
    #for $kw in $line.Kwic
    $kw.str #slurp
    #end for
</kwic><right_context>#slurp
    #for $rr in $line.Right
    #unless $rr.class == 'strc'
    $rr.str #slurp
    #end unless
    #end for
</right_context>
</parline>
#end filter
#end def
#slurp
#if $saveformat == 'xml'
<?xml version="1.0" encoding="utf-8"?>
#filter WebSafe
<concordance>
    #if $heading
    <heading>
        <corpus>$corpname</corpus>
        <hits>$concsize</hits>
        <relative_freq note="$result_relative_freq_rel_to">$result_relative_freq</relative_freq>
        #if $result_arf != ''
        <arf>$result_arf</arf>
        #end if
        <query>#slurp
            #for $d in $Desc
            $d.arg $d.size #slurp
            #end for
        </query>
    </heading>
    #end if
    ## kwic lines
    <lines>
        #for $i, $l in $enumerate($Lines)
        #if $align
        #if $numbering
        #set $num = $i+1
        <parallel_lines num="$num">
            #else
            <parallel_lines>
                #end if
                #filter None
                $print_xml_parline($l, $Par_conc_corpnames[0])#slurp
                #for $ii, $ll in enumerate($l.get('Align', []))
                $print_xml_parline($ll, $Par_conc_corpnames[$ii+1])#slurp
                #end for
                #end filter
            </parallel_lines>
            #else
            <line>
                #if $numbering
                #set $num = $i + 1
                <num>$num</num>
                #end if
                <ref>$l.ref</ref>#slurp
                <left_context>#slurp
                    #for $ll in $l.Left
                    #unless $ll.class == 'strc'
                    $ll.str #slurp
                    #end unless
                    #end for
                </left_context><kwic>#slurp
                #for $kw in $l.Kwic
                $kw.str #slurp
                #end for
            </kwic><right_context>#slurp
                #for $rr in $l.Right
                #unless $rr.class == 'strc'
                $rr.str #slurp
                #end unless
                #end for
            </right_context>
            </line>
            #end if
            #end for
    </lines>
</concordance>

#end filter
#elif $saveformat == 'text'
## Text format
#if $heading
\# Corpus: $corp_full_name
\# Hits: $concsize
\# Relative frequency: $result_relative_freq ($result_relative_freq_rel_to)
#if $result_arf != ''
\# ARF: $result_arf
#end if
#for $d in $Desc
\# $d.op: $d.arg $d.size
#end for
#end if

## kwic lines
#for $i, $l in $enumerate($Lines)
#if $numbering
#set $num = $i+1
$num	#slurp
#end if
$l.ref	#slurp
#if $align_kwic
$l.leftspace #slurp
#end if
#for $ll in $l.Left
#unless $ll.class == 'strc'
$ll.str #slurp
#end unless
#end for
<#slurp
        #for $kw in $l.Kwic
        $kw.str #slurp
        #end for
        >#slurp
    #if $annotconc
    [$l.linegroup]
    #end if
    #for $rr in $l.Right
    #unless $rr.class == 'strc'
    $rr.str #slurp
    #end unless
    #end for
    #if $align_kwic
    $l.rightspace	#slurp
    #end if
    #if $align
    #for $ii, $ll in enumerate($l.get('Align', []))
    $ll.ref	#slurp
    #if $align_kwic
    $ll.leftspace #slurp
    #end if
    #for $lw in $ll.Left
    #unless $lw.class == 'strc'
    $lw.str #slurp
    #end unless
    #end for
    <#slurp
            #for $kw in $ll.Kwic
            $kw.str #slurp
            #end for
            >#slurp
        #if $annotconc
        [$ll.linegroup]
        #end if
        #for $rr in $ll.Right
        #unless $rr.class == 'strc'
        $rr.str #slurp
        #end unless
        #end for
        #if $align_kwic
        $ll.rightspace	#slurp
        #end if
        #end for
        #end if

        #end for

#elif $saveformat == 'csv'
## kwic lines #################
$bom_prefix
#for $row in $data
$row#slurp
#end for
#end if  ## saveformat