#*
Copyright (c) 2003-2009  Pavel Rychly
Copyright (c) 2013 Institute of the Czech National Corpus

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; version 2
dated June, 1991.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
*#
#encoding UTF-8
#import urllib
#import re
#from templating.filters import *
#from translation import ugettext as _
##
<!DOCTYPE html>
<html>
#filter WebSafe
<head>
<title>$title</title>
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="icon" type="image/x-icon" href="$files_path/img/favicon.ico" />
#for $font in $theme.online_fonts
<link href='$font' rel='stylesheet' type='text/css'>
#end for
#end filter

#for $item in $app_bar_css
<link rel="stylesheet" type="text/css" href="$item.url" />
#end for
#if $footer_bar_css
<link rel="stylesheet" type="text/css" href="$footer_bar_css" />
#end if
#for $online_css_item in $theme.online_css
<link rel="stylesheet" type="text/css" href="$online_css_item" />
#end for

#if $debug
<link rel="stylesheet/less" type="text/css" href="$files_path/css/kontext.less" />
<link rel="stylesheet/less" type="text/css" href="$files_path/css/view.less" />
<link rel="stylesheet/less" type="text/css" href="$files_path/css/widgets.less" />
<link rel="stylesheet" type="text/css" href="$files_path/css/keyboard.css" />
<link rel="stylesheet" type="text/css" href="$files_path/css/jscrollpane.css" />
#if $theme.css
<link rel="stylesheet" type="text/css" href="$theme.css" />
#end if
#else
<link rel="stylesheet" type="text/css" href="$files_path/css/kontext.min.css#if $deployment_id#?v=$deployment_id#end if#" />
#end if
<noscript>
    <link rel="stylesheet" type="text/css" href="${files_path}/css/main-menu.css" />
</noscript>
#if $qunit_test
<link rel="stylesheet" type="text/css" href="$files_path/css/qunit.css" />
#end if

<script type="text/javascript" src="$files_path/js/vendor/modernizr.custom.min.js"></script>
#if $debug
<script type="text/javascript" src="$files_path/js/vendor/less.js"></script>
#end if
<script type="text/javascript" src="$files_path/js/min/vendor/requirejs.min.js"></script>
<script type="text/javascript" src="$files_path/js/min/vendor/intl.min.js"></script>
<script type="text/javascript" src="$files_path/js/min/vendor/common.js#if $deployment_id#?v=$deployment_id#end if#"></script>
#block headers
#end block

<script type="text/javascript">
var missingPlugins = [],
    paths = {};

#for $plugin_id, $plugin_path in $plugin_js.items()
#if $plugin_path
paths['plugins/$camelize($plugin_id)'] = './plugins/$plugin_path';
#else
missingPlugins.push('plugins/$camelize(plugin_id)/init');
#end if
#end for

#if $qunit_test
paths['vendor/QUnit'] = './vendor/qunit';
#end if

#if $app_bar_js
#if $app_bar_js.main
paths['plugins/applicationBar/toolbar'] = '$app_bar_js.main';
#end if
#for $item in $app_bar_js.deps
paths['$item.module'] = '$item.url';
#end for
#end if

requirejs.config({
    baseUrl : '${files_path}/js/min',
    paths: paths,
    #if $deployment_id#urlArgs: 'v=$deployment_id',#end if#
    shim : {
        'vendor/jscrollpane' : {
            deps: ['jquery']
        }
        #if $qunit_test
        ,'vendor/QUnit' : {
            exports : 'QUnit',
            init: function() {
                QUnit.config.autoload = false;
                QUnit.config.autostart = false;
            }
        }
        #end if
        #if $app_bar_js
        #for $item in $app_bar_js.deps
        #if 'shim' in $item
        ,'$item.module' : { deps: #filter $Jsonize# $item.shim.deps #end filter# }
        #end if
        #end for
        #end if
    }
});

require(['vendor/rsvp'], function (RSVP) {
    var i;
    for (i = 0; i < missingPlugins.length; i += 1) {
        define(missingPlugins[i], [], function () {
            return {
                getViews : function () { return {}; },
                create : function () {
                    return new RSVP.Promise((fulfill, reject) => {
                        fulfill(null);
                    });
                }
            };
        });
    }
});

define('win', [], function () { return window; });

define('conf', [], function () {
    var conf = {};
    conf.page = {};
    conf.activePlugins = #filter $Jsonize#$active_plugins#end filter#;
    conf.menuAutoHideInterval = 1500;
    conf.messageAutoHideInterval = $getVar('message_auto_hide_interval', 5000);
    conf.rootURL = "$root_url";
    conf.rootPath = "$root_url";
    conf.staticUrl = "$static_url";
    conf.corpname = "$corpname";
    conf.subcorpname = #if $getVar('usesubcorp')#"$usesubcorp"#else# null#end if#;
    conf.baseAttr = "${base_attr}";
    conf.currentAction = "$current_action";
    conf.humanCorpname = "$human_corpname";
    conf.session_cookie_name = "$session_cookie_name";
    conf.anonymousUser = #if $_anonymous#true#else#false#end if#;
    conf.loginUrl = "$login_url";
    conf.emptyAttrValuePlaceholder = "$empty_attr_value_placeholder";
    conf.bibConf = $bib_conf.to_json();
    conf.stateParams = "$join_params($q, $globals)";
    conf.currentArgs = $Globals.to_json();
    conf.uiLang = "$uiLang";
    conf.isDebug = #if $debug#true#else#false#end if#;
    conf.uiStateTTL = ${ui_state_ttl};
    conf.historyMaxQuerySize = ${history_max_query_size};
    #if $varExists('aligned_corpora')
    conf.alignedCorpora = [ #filter $Join#${aligned_corpora, mask='"%s"'}#end filter# ];
    #end if
    conf.availableAlignedCorpora = #filter $Jsonize#$getVar('Aligned', [])#end filter#;
    conf.pluginData = #filter $Jsonize#$plugin_data#end filter#;
    conf.notifications = #filter $Jsonize#$messages#end filter#;
    conf.queryHints = [
        "$_('You can use the \\u0022down arrow\\u0022 key to view recent queries')",
        "$_('In CQL mode you can use Shift+ENTER to enter a new line')"
    ];
    conf.queryTypesHints = {
        iqueryrow : "$_('Query type <em>basic</em> is suitable for getting to know the corpus. It searches for the input expression as a word form case-insensitively; if it is also a canonical dictionary form (lemma), all its word forms are searched as well.')"
    };
    conf.ttIntervalChars = #filter $Jsonize#$getVar('interval_chars', [])#end filter#;
    conf.asyncTasks = #filter $Jsonize#$async_tasks#end filter#;

    return conf;
});
</script>
</head>
<body>
#if $qunit_test
<div id="qunit"></div>
<div id="qunit-fixture">
#end if

#filter WebSafe
<div id="common-bar">
#if $app_bar
#filter None
    $app_bar
#end filter
#else
<span class="user">$_("User"):
    #if not $_anonymous
        $user_info.fullname
        (<a href="$logout_url">$_('logout')</a>)
    #else
        $user_info.fullname
        <a href="$login_url">($_('login'))</a>
    #end if
</span>
#end if
</div>

<header id="topbar">
    <div class="navig-wrapper">
        <div id="menu-bar">
            <a id="logo-wrapper" href="$theme.logo_href"><img id="logo-image" class="over-img"
                src="$theme.logo_path"
                alt="Kontext logo"
                title="$theme.logo_title"
                style="$theme.logo_inline_css"
                data-alt-img="$theme.logo_mouseover_path" /></a>
            <ul id="menu-level-1">
                <li id="menu-new-query" class="$menu_status('menu-new-query')">
                    <a class="trigger" title="$_("Query")">$_("Query")</a>
                    <ul class="submenu">
                        <li class="separ"><a title="$_('Enter new query')" href="${root_url}first_form?$join_params($corpname_url, 'usesubcorp='+$usesubcorp, 'lpos='+$lpos, 'align='+$align)">$_('New query')&#8230;</a></li>
                        <li class="separ $menu_status('menu-new-query:history')"><a title="$_('List of recent queries')" href="${root_url}user/query_history?$corpname_url">$_('Recent queries')&#8230;</a></li>
                        <li class="$menu_status('menu-new-query:wordlist')"><a title="$_("Various methods for creating word lists")"
                            href="${root_url}wordlist_form?$join_params($corpname_url, 'include_nonwords=1')">$_("Word List")&#8230;</a></li>
                    </ul>
                </li>
                <li id="menu-corpora" class="$menu_status('menu-corpora')">
                    <a class="trigger">$_("Corpora")</a>
                    <ul class="submenu">
                        <li class="separ"><a href="${root_url}corpora/corplist">$_('Available corpora')&#8230;</a></li>
                        <li class="$menu_status('menu-corpora:my-subcorpora')"><a title="$_('List of my subcorpora')" href="${root_url}subcorpus/subcorp_list?$join_params($q, $globals)">$_('My subcorpora')&#8230;</a></li>
                        <li class="$menu_status('menu-corpora:new-subcorpus')"><a title="$_('Create new subcorpus')" href="${root_url}subcorpus/subcorp_form?$corpname_url">$_('Create new subcorpus')&#8230;</a></li>
                    </ul>
                </li>
                <li id="menu-save" class="$menu_status('menu-save')">
                    <a class="trigger">$_("Save")</a>
                    <ul class="submenu">
                        #set $i = 0
                        #for $item in $save_menu
                        <li#if $i < $len($save_menu) - 1# class="separ"#end if#><a href="${root_url}$item.action?$join_params($q, $globals, $item.params)">$item.label</a></li>
                        #set $i = $i + 1
                        #end for
                        #block custom_save
                        #end block
                    </ul>
                </li>

                <li id="menu-concordance" class="$menu_status('menu-concordance')">
                    <a class="trigger">$_("Concordance")</a>
                    <ul class="submenu">
                        <li class="separ"><a title="$_('Concordance based on current parameters')" href="${root_url}view?$join_params($q, $globals)">$_('Current concordance')</a></li>
                        <li class="separ"><a title="$_("Complex sorting options")" href="${root_url}sort?$join_params($q, $globals)">$_('Sorting')&#8230;</a></li>
                        <li class="separ"><a title="$_("Randomize ordering of lines")" href="${root_url}view?$join_params($q, 'q=f', $globals)">$_("Shuffle")</a></li>
                        <li class="separ"><a title="$_('Make a random sample from the concordance.')" href="${root_url}reduce_form?$join_params($q, $globals)">$_('Sample')&#8230;</a></li>
                        <li class="separ"><a id="query-overview-trigger"
                            title="$_('Details about current query and related operations')"
                            href="${root_url}concdesc?$join_params($corpname_url, 'usesubcorp='+$usesubcorp, $q)"
                            data-json-href="${root_url}concdesc_json?$join_params($corpname_url, 'usesubcorp='+$usesubcorp, $q)">$_('Query overview')&#8230;</a></li>
                        <li class="separ">
                        #if len($undo_q) > 0
                        <a title="$_('Revert last operation on current concordance')" href="${root_url}view?$join_params($globals, $undo_q)">$_('Undo')</a>
                        #else
                        <span class="disabled" title="$_('Revert last operation on current concordance')" href="${root_url}view?$join_params($globals, $undo_q)">$_('Undo')</span>
                        #end if
                        </li>
                    </ul>
                </li>

                <li id="menu-filter" class="$menu_status('menu-filter')">
                    <a class="trigger" title="$_('Make a query on the current concordance.')">$_('Filter')</a>
                    <ul class="submenu">
                        <li class="separ"><a href="${root_url}filter_form?$join_params($q, $globals, 'pnfilter=p')">$_('Positive')&#8230;</a></li>
                        <li><a href="${root_url}filter_form?$join_params($q, $globals, 'pnfilter=n')">$_('Negative')&#8230;</a></li>
                    </ul>
                </li>

                <li id="menu-frequency" class="$menu_status('menu-frequency')">
                    <a class="trigger">$_('Frequency')</a>
                    <ul class="submenu">
                        #if 'tag' in [x['n'] for x in $getVar('AttrList', ())]
                        <li class="separ"><a title="$_("Show frequencies of lemmas")" href="${root_url}freqs?$join_params($q, $globals, 'fcrit=lemma/e+0~0>0', 'ml=0')">$_("Lemmas")</a></li>
                        #end if
                        <li class="separ"><a title="$_("Show frequencies of Node forms")" href="${root_url}freqs?$join_params($q, $globals, 'fcrit=word/e+0~0>0', 'ml=0')">$_("Node forms")</a></li>
                        #if $varExists('fcrit_shortref') and '.' in $fcrit_shortref.split('/')[0]
                        <li class="separ"><a title="$_("Show frequencies of Doc IDs")" href="${root_url}freqs?$join_params($q, $globals, [('fcrit', $fcrit_shortref), ('ml', 0)])">$_("Doc IDs")</a></li>
                        #end if
                        #if $varExists('ttcrit') and $ttcrit
                        <li class="separ"><a title="$_("Show frequencies of Text Types")" href="${root_url}freqs?$join_params($q, $globals, $ttcrit)">$_("Text Types")</a></li>
                        #end if
                        <li><a title="$_("Entry form for computing frequencies")" href="${root_url}freq?$join_params($q, $globals)">$_('Custom')&#8230;</a></li>
                    </ul>
                </li>

                <li id="menu-collocations" class="$menu_status('menu-collocations')">
                    <a class="trigger" title="$_("Collocation candidates")">$_('Collocations')</a>
                    <ul class="submenu">
                        <li><a href="${root_url}coll?$join_params($q, $globals)">$_('Custom')&#8230;</a></li>
                    </ul>
                </li>

                <li id="menu-view" class="$menu_status('menu-view')">
                    <a class="trigger">$_('View')</a>
                    <ul class="submenu">
                        <li class="separ $menu_status('menu-view:kwic-sentence')">
                        #if not $align
                            #if $viewmode == 'sen'
                            <a title="$_("Show KWICs")" href="${root_url}view?$join_params($Globals.update('viewmode','kwic'), 'fromp='+$to_str($fromp))">$_('KWIC')/$_('Sentence')</a>
                            #else
                            <a title="$_("Show sentences")" href="${root_url}view?$join_params($Globals.update('viewmode', 'sen'), 'fromp='+$to_str($fromp))">$_('KWIC')/$_("Sentence")</a>
                            #end if
                        #else
                            #if $viewmode == 'kwic'
                            <a title="$_("Show sentences")" href="${root_url}view?$join_params($Globals.update('viewmode','sen'), 'fromp='+$to_str($fromp))">$_("KWIC/Sentence/Alignment")</a>
                            #elif $viewmode == 'sen'
                            <a title="$_("Show aligned segments")" href="${root_url}view?$join_params($Globals.update('viewmode','align'), 'fromp='+$to_str($fromp))">$_("KWIC/Sentence/Alignment")</a>
                            #elif $viewmode == 'align'
                            <a title="$_("Show KWICSs")" href="${root_url}view?$join_params($Globals.update('viewmode','kwic'), 'fromp='+$to_str($fromp))">$_("KWIC/Sentence/Alignment")</a>
                            #end if
                        #end if
                        </li>
                        <li class="separ $menu_status('menu-view:viewattrs')"><a href="${root_url}options/viewattrs?$join_params($q, $globals, 'fromp='+$to_str($fromp))">$_("Attributes, structures and references")&#8230;</a></li>
                        <li class="$menu_status('menu-view:viewopts')"><a href="${root_url}options/viewopts?$join_params($q, $globals, 'fromp='+$to_str($fromp))">$_("General view options")&#8230;</a></li>
                    </ul>
                </li>

                <li id="menu-help" class="$menu_status('menu-help')">
                    <a class="trigger" title="$_("Application help and tutorials")" href="#">$_("Help")</a>
                    <ul class="submenu">
                    #filter None#$render_custom_menu_items('menu-help')#end filter#
                    </ul>
                </li>
            </ul>
        </div>
        #if $corpname
        #block state_navigation
        #filter None
        $query_overview_bar()
        #end filter
        #end block
        #end if

    </div> ## navig wrapper
</header>
#end filter

#filter WebSafe
<div id="content">
    <div class="messages-mount"></div>

    #filter None
    #block concordance

    #end block

    #block main
    #end block

    #end filter
</div>

<footer>
    #if $debug
    <div class="debug-warning">
    $_('debugging mode')
    </div>
    #end if

    #if $footer_bar
        #filter None
        $footer_bar
        #end filter
    #else
        #if $len($avail_languages) > 0
        <div id="switch-language-box">$_("user interface languages"):
            #set $i = 0
            <form id="language-switch-form" action="${root_url}user/switch_language" method="POST">
                <input class="language" type="hidden" name="language" />
                <input class="continue" type="hidden" name="continue" />
                #for $lang in $avail_languages
                <a data-lang="$lang[0]">$lang[1].get('label', $lang[0])</a>#if $i < $len($avail_languages) - 1# | #end if#
                #set $i = $i + 1
                #end for
            </form>
        </div>
        #end if
        <div>
            <div id="copyright-info">
                &copy; <a href="http://www.korpus.cz/">Institute of the Czech National Corpus</a>,
                &copy; <a href="http://www.sketchengine.co.uk/">Lexical Computing Ltd.</a>,
                &copy; <a href="http://nlp.fi.muni.cz/">NLP Centre FI MU</a>
            </div>
            <div id="app-version">
                $_('version') <strong>$_version[1]</strong>, $_('uses') manatee-<span>$_version[0]</span>
            </div>

            #if $error_report_url:
            <div id="error-reporting"><a href="$error_report_url" target="_blank">$_('Report an error')</a></div>
            #end if
        </div>
    #end if
</footer>
#end filter

#if $qunit_test
</div>
#end if

<script type="text/javascript">
#block bodyonload
require(['${client_model_dir}/document', 'conf'], function (layoutModel, conf) {
    new layoutModel.PageModel(conf).init();
});
#end block
</script>

</body>
</html>

## ******** Common methods definitions ******** ##

#def user_item_opt($item)
#set $selected = ($item.corpus_id == $corpname) and 'selected="selected"' or ''
<option
    value="$item.corpus_id"
    title="$item.name"
    data-item="#filter $HtmlEscape#$jsonize_user_item($item)#end filter#"
    $selected>$item.name
</option>
#end def


#def corp_sel($corplist)

    <input type="hidden" name="reload" />
    #set $is_fav = False
    <select name="corpname">
      #for $c in $corplist
        #filter None#$user_item_opt($c)#end filter#
      #end for
    </select>
    <span id="subcorp-selector-wrapper">
    #if $SubcorpList
    <strong>:</strong> <select id="subcorp-selector" name="usesubcorp">
        #for $subc in $SubcorpList
        <option value="$subc.v" #if $varExists('usesubcorp') and $usesubcorp==$subc.v#selected="selected"#end if#>$subc.n</option>
        #end for
    </select>
    #end if ## SubcorpList
    </span>
    #if not $_anonymous
    <div class="starred">
    </div>
    #end if

#end def  ## corp_sel
## ***************************************** ##
#def corp_sel_node
    ## Select corpus name
    #set $corplist = $CorplistFn()

    #set $corplist_size = $min($len($corplist), 20)
    #filter None
    <tbody>
        <tr class="required">
            <th>$_("Corpus"):</th>
            <td colspan="2">
            #filter None
            $corp_sel($corplist)
            #end filter
            </td>
        </tr>
    </tbody>
    #end filter
#end def  ## corp_sel_node
## ***************************************** ##
#def input_hidden($exclude=())
    ## Argument to keep current concordance
    #for $g_name, $g_value in $Globals.items()
      #if not $g_name in $exclude
        #for $v in $g_value:
            <input type="hidden" name="$g_name" value="${v, also='"'}" />
        #end for
      #end if
    #end for
#end def
## ***************************************** ##
#def menu_status($id)
    #for $item in $disabled_menu_items
    #if $item.matches($id)#disabled#end if#
    #end for
#end def
## ***************************************** ##
#def render_custom_menu_items($section_id)
    #if $section_id in $custom_menu_items
    #for $menu_item in $custom_menu_items[$section_id]
    <li class="separ"><a #if $menu_item.open_in_blank#target="_blank"#end if# href="$menu_item.url">$menu_item.label</a></li>
    #end for
    #end if
#end def

## ***************************************** ##
#def $human_corpsize()
#filter $FloatFormatter#$corp_size#end filter##slurp
#end def

#def query_overview_bar()
<section class="corpus-and-query">

<ul id="query-overview-bar">
    #if $human_corpname
    <li id="active-corpus">
        <strong>$_('Corpus'):</strong>
        <a id="corpus-desc-link" class="corpus-desc" href="#"
        title="$_('click for details')">$human_corpname</a>#if $usesubcorp#:<a class="subcorpus" title="$_('subcorpus')">$usesubcorp</a>#end if#
    </li>
    #end if
    #set $i = 0
    #for $item in $getVar('query_overview', [])
    <li>
    #if $i > 0#<span class="transition">&\#9654;</span>#else#|#end if
    <strong>$item.op:</strong>
    <a class="args" href="${root_url}view?$join_params($item.tourl, $globals)"
    title="#filter $HtmlEscape#$item.arg#end filter#">
    #if $item.nicearg
    ${item.nicearg}
    #else
    &#10003;
    #end if
    </a>
    #if $item.size
    (#filter $FloatFormatter#$item.size#end filter# $_('hits'))
    #end if
    </li>
    #set $i += 1
    #end for
</ul>
</section>
#end def
