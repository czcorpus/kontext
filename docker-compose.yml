services:
  kontext:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.kontext
      args:
        - KONTEXT_CONFIG=${KONTEXT_CONFIG}
    # since we are using shared volume with nginx
    # in case different version of kontext is used
    # we need to copy files into the shared volume first
    #
    # also we add default permissions for use with `default_auth` plugin
    command: >
      bash -c "cp -r /opt/kontext/public/files/* /opt/kontext/public/share &&
               python3 lib/plugins/default_auth/scripts/import_users.py lib/plugins/default_auth/scripts/users.sample.json &&
               python3 public/app.py --address 0.0.0.0 --port 8080 --workers 2"
    volumes:
      - ${KONTEXT_CONFIG}:/opt/kontext/conf/config.xml
      - files:/opt/kontext/public/share
      - corpora-data:/var/lib/manatee
      - corpora-cache:/var/local/corpora
    networks:
      - databases
      - kontext
    depends_on:
      redis:
        condition: service_healthy

  rq-scheduler:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.rqscheduler
    command: rqscheduler --host kontext-redis-1 --db 2 -i 10
    networks:
      - databases
    depends_on:
      redis:
        condition: service_healthy
      kontext:
        condition: service_started

  rq-worker:
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.rqworker
    volumes:
      - ${KONTEXT_CONFIG}:/opt/kontext/conf/config.xml
      - corpora-data:/var/lib/manatee
      - corpora-cache:/var/local/corpora
    networks:
      - databases
    depends_on:
      redis:
        condition: service_healthy
      kontext:
        condition: service_started

  redis:
    image: redis:alpine
    networks:
      - databases
    ports:
      - "16379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 10s
      retries: 5

  nginx:
    image: nginx:stable-alpine
    ports:
      - "8080:80"
    volumes:
      - ./scripts/install/conf/docker/nginx.conf:/etc/nginx/conf.d/default.conf
      - files:/opt/kontext/public/files
    networks:
      - kontext
    depends_on:
      kontext:
        condition: service_started

volumes:
  files: {}
  corpora-data: {}
  corpora-cache: {}
  redisdata: {}

networks:
  databases: {}
  kontext: {}